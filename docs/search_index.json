[
["primeros-ejemplos.html", "2 Primeros ejemplos de comandos en R 2.1 R como calculadora 2.2 Objetos 2.3 Escalares, vectores y matrices 2.4 Funciones 2.5 Plots 2.6 Scripts", " 2 Primeros ejemplos de comandos en R 2.1 R como calculadora R puede ser usado como una calculadora. Con sólo escribir la ecuación en la consola 10^2 + 36 R devolverá la siguiente respuesta 136 Tarea 1: Calcule la diferencia entre el año actual y el año en que comenzó a estudiar en esta universidad y divídalo por la diferencia entre el año actual y el año en que nació. Multiplique esto por 100 para obtener el porcentaje de su vida que ha pasado en esta universidad. Use corchetes si los necesita 2.2 Objetos R trabaja con objetos, así que es posible crear un objeto que sea un número y da la opción de utilizar ese objeto para otros cálculos. Por ejemplo, se puede crear el siguiente objeto a &lt;- 4 Usando &lt;- o = hará lo mismo, representar el signo igual Se puede observar que el objeto a aparece en la ventana Environment. Para saber que contiene un objeto, se llama al objeto a y se corre (otra forma es escribir en la consola a y dar ENTER) a ## [1] 4 o hacer cálculos con a a*5 ## [1] 20 Si se específica a de nuevo, se borrara el valor que tenía antes. También es posibles asignar un nuevo valor a a usando el valor anterior a &lt;- a + 10 a ## [1] 14 Para eliminar todos los objetos de la memoria de R, se debe utilizar el siguiente código rm(list &lt;- ls()) o dar clic en del Environment. Si sólo se quiere eliminar un objeto, se escribe rm(a) Tarea 2: Repita la Tarea 1 haciendo varios pasos creando objetos 2.3 Escalares, vectores y matrices Para definir un vector se utiliza la función c, la cual significa concatenar. Por ejemplo, para definir un vector con los número 1, 7, 9 y 13, se escribe b &lt;- c(1,7,9,13) b ## [1] 1 7 9 13 Crear vectores de datos para tres individuos nombre &lt;- c(&quot;John&quot;,&quot;Luciana&quot;,&quot;Alexa&quot;) altura &lt;- c(50.1, 89.3, 78.2) alto &lt;- c(FALSE, TRUE, TRUE) Acceder al segundo elemento del objeto altura altura[2] ## [1] 89.3 Accediendo a un rango de valores de un vector altura[2:3] ## [1] 89.3 78.2 Excluyendo el elemento 2 utilizando el signo menos altura[-2] ## [1] 50.1 78.2 Use un vector para indicar si se incluye un elemento altura[c(TRUE, TRUE, FALSE)] ## [1] 50.1 89.3 altura[c(1, 2)] ## [1] 50.1 89.3 altura[-c(1, 2)] ## [1] 78.2 2.4 Funciones Algunas funciones ya se encuentran implementadas en R y hay otras que debe descargarse el paquete necesario para utilizarla. Tambié se pueden programas funciones propias. Por ejemplo, para calcular la media del objeto b creado anteriormente, se debe utilizar el siguiente código mean(b) Tarea 3: Calcule la suma de 7, 8, 90 y 56, primero construyendo el vector y luego usando la función sum La función rnorm, como otro ejemplo, es una función estándar en R la cual crea muestras aleatorias de una distribución normal. Por jemplo, para generar 10 valores aleatorios sería rnorm(10) ## [1] -0.1328560 -0.1115699 -0.3764682 1.1404794 1.8027381 -0.9974932 ## [7] -0.1021666 1.1738559 0.2025637 -1.8829229 Para entender mejor qué hacen y cuáles son los argumento de las funciones, podemos ir a la ventana de Help y escribir rnorm, esto genera la siguiente descripción de la función La función rnorm tiene tres argumentos: n, mean=0 y sd=1. La descripción de los argumentos muestra que n es el número de observaciones, mean=0 es para fijar la media y por defecto es 0, y sd=1 es la desviación estándar y por defecto se fija en 1. Que estén fijados algunos valores por defecto indica que si no se pone nada R utilizará estos valores Por ejemplo, si se quiere generar 10 valores aleatorios de una distribución normal con media 1.2 y desviación estándar 3.4, se debe escribir rnorm(10,1.2,3.4) ## [1] -1.7609410 1.9740349 -4.3328225 4.1881426 3.0257906 -6.7239400 ## [7] 3.1605363 0.6235666 0.2843506 -7.2171311 Note que no es necesario poner media= o sd=, R entiende que el segundo argumento es la media y el tercero es la desviación estándar RStudio tiene un muy buena herramienta: cuando se está escribiendo una función, se puede dar la tecla TAB y RStudio mostrará los posibles argumentos 2.5 Plots R puede hacer gráficos. El siguiente código es un ejemplo sencillo par(mar = c(5, 5, .3, 1)) # vector que define los margenes c(bottom, left, top, right) x &lt;- rnorm(100) plot(x, col=&quot;blue&quot;) Tarea 4: Grafique 1000 números aleatorios normales con media 3 y desviación estándar 1.7 2.6 Scripts R usa líneas de comandos, esto significa que se debe escribir los comandos, más que usar el mouse y menús El código puede guardarse en los llamados scripts. Los scripts son archivos con extensión .R, por ejemplo programa.R Este archivo .R puede ser editado desde R o desde un Bloc de notas Se puede correr parte del código seleccionando las líneas o ubicandose en cualquier parte de la línea y presionando CTRL+ENTER o dando clic en Run () en la ventana del script Se puede correr todo el código con la función source(\"programa.R\"), o dar Run all Tarea 5: Genere un script llamado miprimerscript.R que contenga el código de la Tarea 4 "]
]
